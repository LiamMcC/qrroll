<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>QR Code Scanner</title>
  <style>
    #video-container {
      position: relative;
      width: 100%;
      max-width: 640px; /* Adjust as needed */
    }
    #video-feed {
      width: 100%;
      height: auto;
    }
    #qr-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    body {
      margin: 0;
      font-family: 'Roboto', sans-serif;
    }
    header {
      background-color: #ffffff;
      padding: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .logo {
      font-family: 'Roboto', sans-serif;
      font-size: 24px;
      font-weight: 700;
      color: #333333;
    }
    nav ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
      display: flex;
    }
    nav ul li {
      margin-right: 20px;
    }
    .container {
      background-color: #ffffff;
      padding: 40px;
      text-align: center;
    }
    .container h1 {
      margin-bottom: 20px;
      font-size: 32px;
      color: #333333;
    }
    .container p {
      color: #666666;
    }
    .container img {
      width: 100%;
      max-width: 400px;
      height: auto;
      margin-top: 20px;
    }
    footer {
      background-color: #333333;
      color: #ffffff;
      padding: 40px;
      text-align: center;
    }
    footer ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: center;
    }
    footer ul li {
      margin-right: 20px;
    }
    .large-text {
      font-size: 24px;
      font-weight: 700;
      margin-top: 20px;
    }

    .centered-video {
      width: 400px; /* Adjust width as needed */
      margin: 0 auto; /* Center horizontally */
      text-align: center;
      border-radius: 10px; /* Rounded corners */
      border: 1px solid #333; /* Border */
      padding: 20px;
      margin-bottom: 20px;
    }
    .centered-video header {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 10px;
    }
    .centered-video p {
      font-size: 16px;
      color: #666;
    }
    .centered-video video {
      display: block;
      width: 100%;
      height: auto;
      border-radius: 8px; /* Rounded corners for video */
    }
  </style>
</head>
<body>

    <header>
        <div class="logo">Education Hub</div>
        <nav>
          <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">Courses</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Contact</a></li>
          </ul>
        </nav>
      </header>

      <div class="container">
        <h1>Welcome to Education Hub</h1>
        <p>Keep Track of students as they attend class.</p>
       
      </div>
      

      <div class="centered-video">
        <header>Scan Your Code Please!</header>
        <p id="qr-result">This is a paragraph describing the video content.</p>
        <div id="video-container">
            <video id="video-feed" autoplay playsinline></video>
            <canvas id="qr-overlay"></canvas>
          </div>
      </div>
      <footer>
        <ul>
          <li><a href="#">Privacy Policy</a></li>
          <li><a href="#">Terms of Service</a></li>
          <li><a href="#">FAQ</a></li>
          <li><a href="#">Contact Us</a></li>
        </ul>
        <div class="large-text">Join us and start your journey to success!</div>
      </footer>

 
  <audio id="scan-sound" src="./scanbeep.wav"></audio>

  <script src="./qsQR.js"></script>
  <script>
    let qrDataSent = false; // Flag to track whether QR data has been sent to server
    let scanTimeout; // Variable to store timeout ID

    // Get video element
    const video = document.getElementById('video-feed');
    const qrResultElement = document.getElementById('qr-result');
    const scanSound = document.getElementById('scan-sound');

    // Request access to webcam
    navigator.mediaDevices.getUserMedia({ video: true })
      .then((stream) => {
        // Attach the webcam stream to the video element
        video.srcObject = stream;
      })
      .catch((error) => {
        console.error('Error accessing webcam:', error);
      });

    // Set up canvas for drawing QR code overlay
    const canvas = document.getElementById('qr-overlay');
    const ctx = canvas.getContext('2d');

    // Continuously draw frames from the video feed onto the canvas
    function drawFrame() {
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

      // Decode QR code from the current frame
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const code = jsQR(imageData.data, imageData.width, imageData.height);

      // Display decoded QR code result
      if (code && !qrDataSent) {
        const qrData = JSON.parse(code.data); // Parse JSON data
  const name = qrData.name; // Extract name from parsed data
        qrResultElement.innerText = 'QR Code Detected: ' + name;
        qrDataSent = true; // Update flag to indicate data has been sent
        

        swal({
        title: 'Thanks ' + name,
        text: 'QR Code Detected',
        icon: 'success',
        timer: 2000, // Close after 2 seconds
        buttons: false // Disable buttons
      });


      function getCurrentTime() {
  const now = new Date();
  const hours = String(now.getHours()).padStart(2, '0');
  const minutes = String(now.getMinutes()).padStart(2, '0');
  return `${hours}:${minutes}`;
}

const currentTime = getCurrentTime();

        // Send data to server after a delay
        clearTimeout(scanTimeout); // Clear previous timeout
        scanTimeout = setTimeout(() => {
            playScanSound();
          sendDataToServer(code.data, currentTime); // Send data to server
        }, 1000); // Adjust delay as needed
      } else if (!code) {
        qrResultElement.innerText = 'No QR Code detected.';
        qrDataSent = false; // Reset flag if no QR code detected
      }

      // Repeat the drawing
      requestAnimationFrame(drawFrame);
    }

    // Start drawing frames
    drawFrame();

    // Function to send data to the server
    function sendDataToServer(data, currentTime) {
      fetch('/qrdata', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ data, currentTime})
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to send data to server');
        }
        console.log('Data sent to server successfully');
      })
      .catch(error => {
        console.error('Error sending data to server:', error);
      });

      
    }
    


    function playScanSound() {
      scanSound.play();
    }
  </script>
</body>
</html>
