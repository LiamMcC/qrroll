<%- include('../partials/header') -%>

      <div class="container">
        <h1>Welcome to Attendance Hub</h1>
        <p>Keep Track of students as they attend class.</p>
       
        <div class="rcontainer">
          <div class="flex-item">
            <h2>Scan Your Code Please!</h2>
            <p>Use the QR Code provided to you by the college to scan here for your attendance.
            </p>  
            <p>Position the QR Code on front of the camera. If you see a thank you message you know the attendace has been recorded. </p>
            <p id="qr-result">Content of QR Code.</p>
          </div>

          <div class="flex-item">
            <div class="centered-video">
             
              <div id="video-container">
                  <video id="video-feed" autoplay playsinline></video>
                  <canvas id="qr-overlay"></canvas>
                </div>
            </div>

          </div>
        </div>   



      </div>
      


   

 
  <audio id="scan-sound" src="./scanbeep.wav"></audio>

  <script src="./qsQR.js"></script>
  <script>
    let qrDataSent = false; // Flag to track whether QR data has been sent to server
    let scanTimeout; // Variable to store timeout ID

    // Get video element
    const video = document.getElementById('video-feed');
    const qrResultElement = document.getElementById('qr-result');
    const scanSound = document.getElementById('scan-sound');

    // Request access to webcam
    navigator.mediaDevices.getUserMedia({ video: true })
      .then((stream) => {
        // Attach the webcam stream to the video element
        video.srcObject = stream;
      })
      .catch((error) => {
        console.error('Error accessing webcam:', error);
      });

    // Set up canvas for drawing QR code overlay
    const canvas = document.getElementById('qr-overlay');
    const ctx = canvas.getContext('2d');

    // Continuously draw frames from the video feed onto the canvas
    function drawFrame() {
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

      // Decode QR code from the current frame
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const code = jsQR(imageData.data, imageData.width, imageData.height);

      // Display decoded QR code result
      if (code && !qrDataSent) {
        const qrData = JSON.parse(code.data); // Parse JSON data
  const name = qrData.fname; // Extract name from parsed data
  const sname = qrData.sname; // Extract name from parsed data
        qrResultElement.innerText = 'QR Code Detected: ' + name;
        qrDataSent = true; // Update flag to indicate data has been sent
        

        swal({
        title: 'Thanks ' + name + " " + sname,
        text: 'QR Code Detected',
        icon: 'success',
        timer: 2000, // Close after 2 seconds
        buttons: false // Disable buttons
      });


      function getCurrentTime() {
  const now = new Date();
  const hours = String(now.getHours()).padStart(2, '0');
  const minutes = String(now.getMinutes()).padStart(2, '0');
  return `${hours}:${minutes}`;
}

const currentTime = getCurrentTime();

        // Send data to server after a delay
        clearTimeout(scanTimeout); // Clear previous timeout
        scanTimeout = setTimeout(() => {
            playScanSound();
          sendDataToServer(code.data, currentTime); // Send data to server
        }, 1000); // Adjust delay as needed
      } else if (!code) {
        qrResultElement.innerText = 'No QR Code detected Yet.';
        qrDataSent = false; // Reset flag if no QR code detected
      }

      // Repeat the drawing
      requestAnimationFrame(drawFrame);
    }

    // Start drawing frames
    drawFrame();

    // Function to send data to the server
    function sendDataToServer(data, currentTime) {
      fetch('/qrdatadb', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ data, currentTime})
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to send data to server');
        }
        console.log('Data sent to server successfully');
      })
      .catch(error => {
        console.error('Error sending data to server:', error);
      });

      
    }
    


    function playScanSound() {
      scanSound.play();
    }
  </script>

<%- include('../partials/footer') -%>
</body>
</html>
